//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eticaret.Konsol.ESN {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Domain.POCO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eticaret.Konsol.ESN.ToDo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eticaret.Konsol.ESN.Update))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eticaret.Konsol.ESN.Error))]
    public partial class BaseServiceModel : Basecore.Model.BaseModel, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Eticaret.Konsol.ESN.App AppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eticaret.Konsol.ESN.App App {
            get {
                return this.AppField;
            }
            set {
                if ((object.ReferenceEquals(this.AppField, value) != true)) {
                    this.AppField = value;
                    this.RaisePropertyChanged("App");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="App", Namespace="http://schemas.datacontract.org/2004/07/Domain.POCO")]
    [System.SerializableAttribute()]
    public partial class App : Basecore.Model.BaseModel, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Eticaret.Konsol.ESN.Error[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Eticaret.Konsol.ESN.ToDo[] TodoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Eticaret.Konsol.ESN.Update[] UpdatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eticaret.Konsol.ESN.Error[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eticaret.Konsol.ESN.ToDo[] TodoList {
            get {
                return this.TodoListField;
            }
            set {
                if ((object.ReferenceEquals(this.TodoListField, value) != true)) {
                    this.TodoListField = value;
                    this.RaisePropertyChanged("TodoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eticaret.Konsol.ESN.Update[] Updates {
            get {
                return this.UpdatesField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatesField, value) != true)) {
                    this.UpdatesField = value;
                    this.RaisePropertyChanged("Updates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToDo", Namespace="http://schemas.datacontract.org/2004/07/Domain.POCO")]
    [System.SerializableAttribute()]
    public partial class ToDo : Eticaret.Konsol.ESN.BaseServiceModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoursTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompletedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoursTaken {
            get {
                return this.HoursTakenField;
            }
            set {
                if ((this.HoursTakenField.Equals(value) != true)) {
                    this.HoursTakenField = value;
                    this.RaisePropertyChanged("HoursTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCompleted {
            get {
                return this.IsCompletedField;
            }
            set {
                if ((this.IsCompletedField.Equals(value) != true)) {
                    this.IsCompletedField = value;
                    this.RaisePropertyChanged("IsCompleted");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Update", Namespace="http://schemas.datacontract.org/2004/07/Domain.POCO")]
    [System.SerializableAttribute()]
    public partial class Update : Eticaret.Konsol.ESN.BaseServiceModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetVersion {
            get {
                return this.TargetVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetVersionField, value) != true)) {
                    this.TargetVersionField = value;
                    this.RaisePropertyChanged("TargetVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/Domain.POCO")]
    [System.SerializableAttribute()]
    public partial class Error : Eticaret.Konsol.ESN.BaseServiceModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControllerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Eticaret.Konsol.ESN.ErrorType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Controller {
            get {
                return this.ControllerField;
            }
            set {
                if ((object.ReferenceEquals(this.ControllerField, value) != true)) {
                    this.ControllerField = value;
                    this.RaisePropertyChanged("Controller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eticaret.Konsol.ESN.ErrorType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorType", Namespace="http://schemas.datacontract.org/2004/07/Domain.Constants")]
    public enum ErrorType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GUI = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FRAMEWORK = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CORE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SERVICE = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResult", Namespace="http://schemas.datacontract.org/2004/07/Basecore.Model.ResultTypes")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eticaret.Konsol.ESN.ServiceResultOfErrorDBqOh3ZZ))]
    public partial class ServiceResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Eticaret.Konsol.ESN.ResultState StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eticaret.Konsol.ESN.ResultState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfArrayOfErrorDBqOh3ZZ", Namespace="http://schemas.datacontract.org/2004/07/Basecore.Model.ResultTypes")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfArrayOfErrorDBqOh3ZZ : Eticaret.Konsol.ESN.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Eticaret.Konsol.ESN.Error[] ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eticaret.Konsol.ESN.Error[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResultOfErrorDBqOh3ZZ", Namespace="http://schemas.datacontract.org/2004/07/Basecore.Model.ResultTypes")]
    [System.SerializableAttribute()]
    public partial class ServiceResultOfErrorDBqOh3ZZ : Eticaret.Konsol.ESN.ServiceResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Eticaret.Konsol.ESN.Error ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eticaret.Konsol.ESN.Error Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultState", Namespace="http://schemas.datacontract.org/2004/07/Basecore.Model.Enums")]
    public enum ResultState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Forbidden = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ESN.IErrorService")]
    public interface IErrorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/Insert", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/InsertResponse")]
        Eticaret.Konsol.ESN.ServiceResult Insert(Eticaret.Konsol.ESN.Error entity, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/Insert", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/InsertResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResult> InsertAsync(Eticaret.Konsol.ESN.Error entity, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/UpdateResponse")]
        Eticaret.Konsol.ESN.ServiceResult Update(Eticaret.Konsol.ESN.Error entity, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/UpdateResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResult> UpdateAsync(Eticaret.Konsol.ESN.Error entity, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/Delete", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/DeleteResponse")]
        Eticaret.Konsol.ESN.ServiceResult Delete(string id, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/Delete", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/DeleteResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResult> DeleteAsync(string id, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/DeleteMarked", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/DeleteMarkedResponse")]
        Eticaret.Konsol.ESN.ServiceResult DeleteMarked(string id, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/DeleteMarked", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/DeleteMarkedResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResult> DeleteMarkedAsync(string id, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/GetList", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/GetListResponse")]
        Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ GetList(string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/GetList", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/GetListResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ> GetListAsync(string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/Get", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/GetResponse")]
        Eticaret.Konsol.ESN.ServiceResultOfErrorDBqOh3ZZ Get(string id, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/Get", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/GetResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfErrorDBqOh3ZZ> GetAsync(string id, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/SelectByQuery", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/SelectByQueryResponse")]
        Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ SelectByQuery(string query, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/SelectByQuery", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/SelectByQueryResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ> SelectByQueryAsync(string query, string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/SelectByQuantity", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/SelectByQuantityResponse")]
        Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ SelectByQuantity(string appCode, int skip, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Error/SelectByQuantity", ReplyAction="http://tempuri.org/IBaseServiceOf_Error/SelectByQuantityResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ> SelectByQuantityAsync(string appCode, int skip, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IErrorService/GetLastThreeDays", ReplyAction="http://tempuri.org/IErrorService/GetLastThreeDaysResponse")]
        Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ GetLastThreeDays(string appCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IErrorService/GetLastThreeDays", ReplyAction="http://tempuri.org/IErrorService/GetLastThreeDaysResponse")]
        System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ> GetLastThreeDaysAsync(string appCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IErrorServiceChannel : Eticaret.Konsol.ESN.IErrorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ErrorServiceClient : System.ServiceModel.ClientBase<Eticaret.Konsol.ESN.IErrorService>, Eticaret.Konsol.ESN.IErrorService {
        
        public ErrorServiceClient() {
        }
        
        public ErrorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ErrorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ErrorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ErrorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Eticaret.Konsol.ESN.ServiceResult Insert(Eticaret.Konsol.ESN.Error entity, string appCode) {
            return base.Channel.Insert(entity, appCode);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResult> InsertAsync(Eticaret.Konsol.ESN.Error entity, string appCode) {
            return base.Channel.InsertAsync(entity, appCode);
        }
        
        public Eticaret.Konsol.ESN.ServiceResult Update(Eticaret.Konsol.ESN.Error entity, string appCode) {
            return base.Channel.Update(entity, appCode);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResult> UpdateAsync(Eticaret.Konsol.ESN.Error entity, string appCode) {
            return base.Channel.UpdateAsync(entity, appCode);
        }
        
        public Eticaret.Konsol.ESN.ServiceResult Delete(string id, string appCode) {
            return base.Channel.Delete(id, appCode);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResult> DeleteAsync(string id, string appCode) {
            return base.Channel.DeleteAsync(id, appCode);
        }
        
        public Eticaret.Konsol.ESN.ServiceResult DeleteMarked(string id, string appCode) {
            return base.Channel.DeleteMarked(id, appCode);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResult> DeleteMarkedAsync(string id, string appCode) {
            return base.Channel.DeleteMarkedAsync(id, appCode);
        }
        
        public Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ GetList(string appCode) {
            return base.Channel.GetList(appCode);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ> GetListAsync(string appCode) {
            return base.Channel.GetListAsync(appCode);
        }
        
        public Eticaret.Konsol.ESN.ServiceResultOfErrorDBqOh3ZZ Get(string id, string appCode) {
            return base.Channel.Get(id, appCode);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfErrorDBqOh3ZZ> GetAsync(string id, string appCode) {
            return base.Channel.GetAsync(id, appCode);
        }
        
        public Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ SelectByQuery(string query, string appCode) {
            return base.Channel.SelectByQuery(query, appCode);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ> SelectByQueryAsync(string query, string appCode) {
            return base.Channel.SelectByQueryAsync(query, appCode);
        }
        
        public Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ SelectByQuantity(string appCode, int skip, int count) {
            return base.Channel.SelectByQuantity(appCode, skip, count);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ> SelectByQuantityAsync(string appCode, int skip, int count) {
            return base.Channel.SelectByQuantityAsync(appCode, skip, count);
        }
        
        public Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ GetLastThreeDays(string appCode) {
            return base.Channel.GetLastThreeDays(appCode);
        }
        
        public System.Threading.Tasks.Task<Eticaret.Konsol.ESN.ServiceResultOfArrayOfErrorDBqOh3ZZ> GetLastThreeDaysAsync(string appCode) {
            return base.Channel.GetLastThreeDaysAsync(appCode);
        }
    }
}
